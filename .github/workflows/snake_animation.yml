# File: .github/workflows/snake_animation.yml
# Last Updated: 2025/01/03

# Description: GitHub Actions workflow for generating GitHub Contributions Snake animations and deploying them to the 'output' branch.
# Trigger: Runs daily at midnight UTC, on push to the main branch, or can be triggered manually.
# Outputs: SVG and GIF files for the GitHub Snake game, displayed on the repository's 'output' branch.
# Workflow Dependencies:
# - Platane/snk: Used for generating the GitHub Snake animation.
# - peaceiris/actions-gh-pages: Deploys the generated files to the 'output' branch.

name: GitHub Snake Game

on:
  # Schedule the workflow to run daily at midnight UTC
  schedule:
    - cron: "0 0 * * *"

  # Allow manual triggering of the workflow via the GitHub Actions UI
  workflow_dispatch:

  # Trigger the workflow automatically on pushes to the main branch
  push:
    branches:
      - main

jobs:
  generate:
    # Define the environment for the job (Ubuntu latest version)
    runs-on: ubuntu-latest

    # Set a timeout for the job to prevent it from running indefinitely
    timeout-minutes: 10

    steps:
      # Step 1: Checkout the repository to ensure the workflow has access to the code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Generate the snake animations using Platane's GitHub Snake Action
      - name: Generate GitHub Contributions Snake Animations
        uses: Platane/snk@v3
        with:
          # Specify the GitHub username for which the animation is generated
          github_user_name: ${{ github.repository_owner }}

          # Define the output files and their configurations
          outputs: |
            # Generate an SVG file for the default palette
            dist/github-snake.svg
            # Generate a dark-themed SVG file
            dist/github-snake-dark.svg?palette=github-dark
            # Generate a GIF file with custom snake and dot colors
            dist/ocean.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9

        env:
          # Use GitHub token for authentication
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Deploy the generated files to the 'output' branch for publishing
      - name: Deploy to Output Branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          # GitHub token to authenticate for pushing changes
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
          # Directory containing the files to publish
          publish_dir: ./dist
          
          # Specify the branch where the files will be published (output branch)
          publish_branch: output
          
          # Commit message for the update, use [skip ci] to avoid triggering another CI build
          commit_message: "Update snake animation [skip ci]"
